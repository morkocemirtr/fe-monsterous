--[ Made by thebigreeman / professional dumbass#5743. ]--

--[ MONSTEROUS V1 ]--

-- NOTICE: This script wont fling people. In the future, ill update this script to have more features and be able to fling.

-- HATS: (total cost: 8 robux)

--https://www.roblox.com/catalog/8337370/Blockhead-Baseball-Cap

--https://www.roblox.com/catalog/48474313/Red-Roblox-Cap

--https://www.roblox.com/catalog/376527115/Jade-Necklace-with-Shell-Pendant

--https://www.roblox.com/catalog/63690008/Pal-Hair

--https://www.roblox.com/catalog/62234425/Brown-Hair

--https://www.roblox.com/catalog/48474294/ROBLOX-Girl-Hair

--https://www.roblox.com/catalog/451220849/Lavender-Updo

--https://www.roblox.com/catalog/62724852/Chestnut-Bun

-- CONTROLS:

-- X to switch between extended or compact.

-- F to super jump (Extended).

-- R to scream (Extended).

-- Click to grab (Extended).

-- Z to sit (Compact).

-- C to speed boost (Compact).

-- SETTINGS:

TransitionTime = 2 -- The time it takes to transition.

UseInbuiltNetbypass = true -- If you want, you can disable this and run your own net bypass that is probably better then mine in all ways.

local Players = game:GetService("Players")

local RunService = game:GetService("RunService")

local Player = Players.LocalPlayer

local Character = Player.Character

local Children = Character:GetChildren()

local Descendants = Character:GetDescendants()

local CoreGui = game:GetService("StarterGui")

local uis = game:GetService("UserInputService")

local TweenService = game:GetService("TweenService")

local animatescript = nil

local isextended = false

local switchingmodes = false

Humanoid = Character:FindFirstChildOfClass("Humanoid")

animatescript = Character.Animate

animatescript.Disabled = true

if Humanoid.RigType == Enum.HumanoidRigType.R6 then

 R6 = true

else

 CoreGui:SetCore("SendNotification", {

  Title = "Uncompatible";

  Text = "Your character must be R6 to work.";

  Duration = 5;

  Icon = "rbxassetid://5087913874";

  Button1 = "Ok";

 })

 return

end

local chalarm = Character:FindFirstChild("Left Arm")

local chararm = Character:FindFirstChild("Right Arm")

local challeg = Character:FindFirstChild("Left Leg")

local charleg = Character:FindFirstChild("Right Leg")

local chatorso = Character:FindFirstChild("Torso")

if chalarm == nil then

 CoreGui:SetCore("SendNotification", {

  Title = "Error";

  Text = "Left Arm is missing.";

  Duration = 5;

  Icon = "rbxassetid://5087913874";

  Button1 = "Ok";

 })

end

if chararm == nil then

 CoreGui:SetCore("SendNotification", {

  Title = "Error";

  Text = "Right Arm is missing.";

  Duration = 5;

  Icon = "rbxassetid://5087913874";

  Button1 = "Ok";

 })

end

if challeg == nil then

 CoreGui:SetCore("SendNotification", {

  Title = "Error";

  Text = "Left Leg is missing.";

  Duration = 5;

  Icon = "rbxassetid://5087913874";

  Button1 = "Ok";

 })

end

if charleg == nil then

 CoreGui:SetCore("SendNotification", {

  Title = "Error";

  Text = "Right Leg is missing.";

  Duration = 5;

  Icon = "rbxassetid://5087913874";

  Button1 = "Ok";

 })

end

if chatorso == nil then

 CoreGui:SetCore("SendNotification", {

  Title = "Error";

  Text = "Torso is missing.";

  Duration = 5;

  Icon = "rbxassetid://5087913874";

  Button1 = "Ok";

 })

end

CoreGui:SetCore("SendNotification", {

 Title = "Successfully loaded.";

 Text = "Made by thebigreeman / professional dumbass#5743.";

 Duration = 5;

 Icon = "rbxassetid://4485364377";

 Button1 = "Ok";

})

if UseInbuiltNetbypass == true then

 for i,v in next, game:GetService("Players").LocalPlayer.Character:GetChildren() do

  if v:IsA("BasePart") and v.Name ~= "HumanoidRootPart" then 

   game:GetService("RunService").Heartbeat:connect(function()

    v.Velocity = Vector3.new(0,-30,0)

    wait(0.5)

   end)

  elseif v:IsA("Accessory") then

   game:GetService("RunService").Heartbeat:connect(function()

    v.Handle.Velocity = Vector3.new(0,-30,0)

    wait(0.5)

   end)

  end

 end

end

for i,v in pairs(Character.Humanoid:GetPlayingAnimationTracks()) do

 v:Stop()

end

for i,v in pairs(Descendants) do

 if v:IsA("Motor6D") and v.Name ~= "Neck" and v.Name ~= "Waist" then

  v:Destroy()

 end

end

for i,v in pairs(Children) do

 if v:IsA("Accessory") then

  v.Handle:FindFirstChildOfClass("Weld"):Destroy()

  v.Handle:FindFirstChildOfClass("SpecialMesh"):Destroy()

 end

end

--game.ReplicatedStorage.Dummy:Clone() -- used for testing purposes in studio

local rig = game:GetObjects("rbxassetid://12603156605")[1]

rig.Name = "Dummy"

rig.Parent = Character

rig.HumanoidRootPart.Anchored = false

workspace.CurrentCamera.CameraSubject = rig

rig.HumanoidRootPart.CFrame = Character.HumanoidRootPart.CFrame

function cf(part,rigpart,offset)

 --part.Velocity = Vector3.new(0,30,0)

 part.Velocity = Vector3.new(rig.HumanoidRootPart.CFrame.LookVector.X * 50, rig.HumanoidRootPart.Velocity.Y * 5, rig.HumanoidRootPart.CFrame.LookVector.Z * 50)

 if offset then

  part.CFrame = rigpart.CFrame * offset

 else

  part.CFrame = rigpart.CFrame

 end

end

Collision = RunService.Stepped:Connect(function()

 for i,v in pairs(Children) do

  if v:IsA("BasePart") then

   v.CanCollide = false

  end

 end

end)

CFLoop = RunService.Heartbeat:Connect(function()

 if not rig then

  CFLoop:Disconnect()

  Collision:Disconnect()

 end

 rig.Humanoid.Jump = Humanoid.Jump

 rig.Humanoid:Move(Humanoid.MoveDirection)

 cf(chatorso,rig["Torso"])

 cf(chalarm,rig["Left Arm"])

 cf(chararm,rig["Right Arm"])

 cf(challeg,rig["Left Leg"])

 cf(charleg,rig["Right Leg"])

 cf(Character["BlockheadBaseballCap"].Handle,rig["Left Wrist"])

 cf(Character["Hat1"].Handle,rig["Right Wrist"])

 cf(Character["Kate Hair"].Handle,rig["Left Thigh"])

 cf(Character["LavanderHair"].Handle,rig["Right Thigh"])

 cf(Character["Necklace"].Handle,rig["Left Hand"])

 cf(Character["Pal Hair"].Handle,rig["Right Hand"])

 cf(Character["Pink Hair"].Handle,rig["Left Foot"])

 cf(Character["Robloxclassicred"].Handle,rig["Right Foot"])

end)

if R6 then

 animatescript = Character.Animate:Clone()

 animatescript.Parent = rig

 animatescript.Disabled = false

 Character.Animate:Destroy()

else

 --loadstring(game:HttpGet("https://raw.githubusercontent.com/Syntaxx64/ReanimationTutorial/main/Reanimation.lua"))()

end

local movement = false

local previousmove = false

local currentlygrabbing = false

-- begin animation functions

function MonsterController()

 local r = coroutine.wrap(function()

  while true do

   if isextended == false then

    break

   end

   local info = TweenInfo.new(

    2,

    Enum.EasingStyle.Cubic,

    Enum.EasingDirection.InOut,

    0,

    false,

    0

   )

   local goal1 = {

    C0 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(-90), math.rad(-180), math.rad(0)),

    C1 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(-80), math.rad(0), math.rad(180))

   }

   local goal2 = {

    C0 = CFrame.new(-1, -1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(-90), math.rad(0)),

    C1 = CFrame.new(-0.5, 1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(-90), math.rad(-10))

   }

   local goal3 = {

    C0 = CFrame.new(1, -1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(90), math.rad(0)),

    C1 = CFrame.new(0.5, 1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(90), math.rad(-50))

   }

   local goal4 = {

    C0 = CFrame.new(-1, 0.5, 0) * CFrame.fromOrientation(math.rad(0), math.rad(-90), math.rad(0)),

    C1 = CFrame.new(0.5, 0.5, 0) * CFrame.fromOrientation(math.rad(55), math.rad(-90), math.rad(-60))

   }

   local goal5 = {

    C0 = CFrame.new(1, 0.5, 0) * CFrame.fromOrientation(math.rad(0), math.rad(90), math.rad(0)),

    C1 = CFrame.new(-0.5, 0.5, 0) * CFrame.fromOrientation(math.rad(55), math.rad(90), math.rad(60))

   }

   local tween5 = TweenService:Create(rig["Torso"]["Right Shoulder"], info, goal5)

   local tween4 = TweenService:Create(rig["Torso"]["Left Shoulder"], info, goal4)

   local tween3 = TweenService:Create(rig["Torso"]["Right Hip"], info, goal3)

   local tween2 = TweenService:Create(rig["Torso"]["Left Hip"], info, goal2)

   local tween1 = TweenService:Create(rig["HumanoidRootPart"].RootJoint, info, goal1)

   if currentlygrabbing == false then

    tween5:Play()

    tween4:Play()

   end

   if movement == false then

    tween3:Play()

    tween2:Play()

    tween1:Play()

   end

   wait(2)

   if isextended == false then

    break

   end

   local info = TweenInfo.new(

    2,

    Enum.EasingStyle.Cubic,

    Enum.EasingDirection.InOut,

    0,

    false,

    0

   )

   local goal1 = {

    C0 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(-90), math.rad(-180), math.rad(0)),

    C1 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(-60), math.rad(0), math.rad(180))

   }

   local goal2 = {

    C0 = CFrame.new(-1, -1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(-90), math.rad(0)),

    C1 = CFrame.new(-0.5, 1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(-90), math.rad(10))

   }

   local goal3 = {

    C0 = CFrame.new(1, -1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(90), math.rad(0)),

    C1 = CFrame.new(0.5, 1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(90), math.rad(-70))

   }

   local goal4 = {

    C0 = CFrame.new(-1, 0.5, 0) * CFrame.fromOrientation(math.rad(0), math.rad(-90), math.rad(0)),

    C1 = CFrame.new(0.5, 0.5, 0) * CFrame.fromOrientation(math.rad(40), math.rad(-90), math.rad(-20))

   }

   local goal5 = {

    C0 = CFrame.new(1, 0.5, 0) * CFrame.fromOrientation(math.rad(0), math.rad(90), math.rad(0)),

    C1 = CFrame.new(-0.5, 0.5, 0) * CFrame.fromOrientation(math.rad(40), math.rad(90), math.rad(20))

   }

   local tween5 = TweenService:Create(rig["Torso"]["Right Shoulder"], info, goal5)

   local tween4 = TweenService:Create(rig["Torso"]["Left Shoulder"], info, goal4)

   local tween3 = TweenService:Create(rig["Torso"]["Right Hip"], info, goal3)

   local tween2 = TweenService:Create(rig["Torso"]["Left Hip"], info, goal2)

   local tween1 = TweenService:Create(rig["HumanoidRootPart"].RootJoint, info, goal1)

   if currentlygrabbing == false then

    tween5:Play()

    tween4:Play()

   end

   if movement == false then

    tween3:Play()

    tween2:Play() 

    tween1:Play()

   end

   wait(2)

  end

 end)

 local g = coroutine.wrap(function()

  while true do

   if isextended == false then

    break

   end

   if rig.Humanoid.MoveDirection.Magnitude > 0 then

    movement = true

   else

    movement = false

   end

   wait()

  end

 end)

 local h = coroutine.wrap(function()

  local function loop()

   wait()

   if isextended == false then

    return

   end

   if movement == true then

    previousmove = true

    if isextended == false then

     return

    end

    local info = TweenInfo.new(

     0.3,

     Enum.EasingStyle.Cubic,

     Enum.EasingDirection.InOut,

     0,

     false,

     0

    )

    local goal1 = {

     C0 = CFrame.new(1, -1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(90), math.rad(0)),

     C1 = CFrame.new(0.5, 1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(90), math.rad(-10))

    }

    local goal2 = {

     C0 = CFrame.new(-1, -1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(-90), math.rad(0)),

     C1 = CFrame.new(-0.5, 1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(-90), math.rad(70))

    }

    local goal3 = {

     C0 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(-90), math.rad(-180), math.rad(0)),

     C1 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(-50), math.rad(0), math.rad(180))

    }

    local tween1 = TweenService:Create(rig["Torso"]["Right Hip"], info, goal1)

    local tween2 = TweenService:Create(rig["Torso"]["Left Hip"], info, goal2)

    local tween3 = TweenService:Create(rig["HumanoidRootPart"].RootJoint, info, goal3)

    tween1:Play()

    tween2:Play()

    tween3:Play()

    tween1.Completed:Wait()

    if isextended == false then

     return

    end

    if movement == false then

     loop()

     return

    end

    local info = TweenInfo.new(

     0.3,

     Enum.EasingStyle.Cubic,

     Enum.EasingDirection.InOut,

     0,

     false,

     0

    )

    local goal1 = {

     C0 = CFrame.new(1, -1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(90), math.rad(0)),

     C1 = CFrame.new(0.5, 1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(90), math.rad(-70))

    }

    local goal2 = {

     C0 = CFrame.new(-1, -1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(-90), math.rad(0)),

     C1 = CFrame.new(-0.5, 1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(-90), math.rad(10))

    }

    local goal3 = {

     C0 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(-90), math.rad(-180), math.rad(0)),

     C1 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(-60), math.rad(0), math.rad(180))

    }

    local tween1 = TweenService:Create(rig["Torso"]["Right Hip"], info, goal1)

    local tween2 = TweenService:Create(rig["Torso"]["Left Hip"], info, goal2)

    local tween3 = TweenService:Create(rig["HumanoidRootPart"].RootJoint, info, goal3)

    tween1:Play()

    tween2:Play()

    tween3:Play()

    tween1.Completed:Wait()

    loop()

    return

   else

    if previousmove == true then

     previousmove = false

     local info = TweenInfo.new(

      0.3,

      Enum.EasingStyle.Cubic,

      Enum.EasingDirection.InOut,

      0,

      false,

      0

     )

     local goal1 = {

      C0 = CFrame.new(1, -1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(90), math.rad(0)),

      C1 = CFrame.new(0.5, 1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(90), math.rad(-70))

     }

     local goal2 = {

      C0 = CFrame.new(-1, -1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(-90), math.rad(0)),

      C1 = CFrame.new(-0.5, 1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(-90), math.rad(10))

     }

     local tween1 = TweenService:Create(rig["Torso"]["Right Hip"], info, goal1)

     local tween2 = TweenService:Create(rig["Torso"]["Left Hip"], info, goal2)

     tween1:Play()

     tween2:Play()

    end

    loop()

    return

   end

  end

  loop()

 end)

 h()

 g()

 r()

end

function StartExtend()

 for i,v in pairs(rig.Humanoid:GetPlayingAnimationTracks()) do

  v:Stop()

 end

 local info = TweenInfo.new(

  TransitionTime,

  Enum.EasingStyle.Cubic,

  Enum.EasingDirection.Out,

  0,

  false,

  0

 )

 local goal1 = {

  C0 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(-90), math.rad(-180), math.rad(0)),

  C1 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(-60), math.rad(0), math.rad(180))

 }

 local tween1 = TweenService:Create(rig["HumanoidRootPart"].RootJoint, info, goal1)

 local goal2 = {

  C0 = CFrame.new(-1, -1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(-90), math.rad(0)),

  C1 = CFrame.new(-0.5, 1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(-90), math.rad(10))

 }

 local tween2 = TweenService:Create(rig["Torso"]["Left Hip"], info, goal2)

 local goal3 = {

  C0 = CFrame.new(-1, 0.5, 0) * CFrame.fromOrientation(math.rad(0), math.rad(-90), math.rad(0)),

  C1 = CFrame.new(0.5, 0.5, 0) * CFrame.fromOrientation(math.rad(40), math.rad(-90), math.rad(-20))

 }

 local tween3 = TweenService:Create(rig["Torso"]["Left Shoulder"], info, goal3)

 local goal4 = {

  C0 = CFrame.new(1, 0.5, 0) * CFrame.fromOrientation(math.rad(0), math.rad(90), math.rad(0)),

  C1 = CFrame.new(-0.5, 0.5, 0) * CFrame.fromOrientation(math.rad(40), math.rad(90), math.rad(20))

 }

 local tween4 = TweenService:Create(rig["Torso"]["Right Shoulder"], info, goal4)

 local goal5 = {

  C0 = CFrame.new(1, -1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(90), math.rad(0)),

  C1 = CFrame.new(0.5, 1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(90), math.rad(-70))

 }

 local tween5 = TweenService:Create(rig["Torso"]["Right Hip"], info, goal5)

 local goal6 = {

  C0 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(90), math.rad(0), math.rad(0)),

  C1 = CFrame.new(0, 0.26, -2) * CFrame.fromOrientation(math.rad(15), math.rad(0), math.rad(0))

 }

 local tween6 = TweenService:Create(rig["Left Leg"]["LeftTConnection"], info, goal6)

 local goal7 = {

  C0 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(0), math.rad(0), math.rad(0)),

  C1 = CFrame.new(0, 0.26, -2) * CFrame.fromOrientation(math.rad(15), math.rad(0), math.rad(0))

 }

 local tween7 = TweenService:Create(rig["Left Thigh"]["LeftFConnection"], info, goal7)

 local goal8 = {

  C0 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(90), math.rad(0), math.rad(0)),

  C1 = CFrame.new(0, 0.26, -2) * CFrame.fromOrientation(math.rad(15), math.rad(0), math.rad(0))

 }

 local tween8 = TweenService:Create(rig["Right Leg"]["RightTConnection"], info, goal8)

 local goal9 = {

  C0 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(0), math.rad(0), math.rad(0)),

  C1 = CFrame.new(0, 0.26, -2) * CFrame.fromOrientation(math.rad(15), math.rad(0), math.rad(0))

 }

 local tween9 = TweenService:Create(rig["Right Thigh"]["RightFConnection"], info, goal9)

 local goal10 = {

  C0 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(90), math.rad(0), math.rad(0)),

  C1 = CFrame.new(0, -0.55, -2) * CFrame.fromOrientation(math.rad(-30), math.rad(0), math.rad(0))

 }

 local tween10 = TweenService:Create(rig["Left Arm"]["LeftWConnection"], info, goal10)

 local goal11 = {

  C0 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(0), math.rad(0), math.rad(0)),

  C1 = CFrame.new(0, -0.55, -2) * CFrame.fromOrientation(math.rad(-30), math.rad(0), math.rad(0))

 }

 local tween11 = TweenService:Create(rig["Left Wrist"]["LeftHConnection"], info, goal11)

 local goal12 = {

  C0 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(90), math.rad(0), math.rad(0)),

  C1 = CFrame.new(0, -0.55, -2) * CFrame.fromOrientation(math.rad(-30), math.rad(0), math.rad(0))

 }

 local tween12 = TweenService:Create(rig["Right Arm"]["RightWConnection"], info, goal12)

 local goal13 = {

  C0 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(0), math.rad(0), math.rad(0)),

  C1 = CFrame.new(0, -0.55, -2) * CFrame.fromOrientation(math.rad(-30), math.rad(0), math.rad(0))

 }

 local tween13 = TweenService:Create(rig["Right Wrist"]["RightHConnection"], info, goal13)

 tween1:Play()

 tween2:Play()

 tween3:Play()

 tween4:Play()

 tween5:Play()

 tween6:Play()

 tween7:Play()

 tween8:Play()

 tween9:Play()

 tween10:Play()

 tween11:Play()

 tween12:Play()

 tween13:Play()

 tween1.Completed:Wait()

 rig.Humanoid.WalkSpeed = 32

 switchingmodes = false

 MonsterController()

end

function ReturnCompact()

 local info = TweenInfo.new(

  TransitionTime,

  Enum.EasingStyle.Cubic,

  Enum.EasingDirection.Out,

  0,

  false,

  0

 )

 local goal1 = {

  C0 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(-90), math.rad(-180), math.rad(0)),

  C1 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(-90), math.rad(-180), math.rad(0))

 }

 local tween1 = TweenService:Create(rig["HumanoidRootPart"].RootJoint, info, goal1)

 local goal2 = {

  C0 = CFrame.new(-1, -1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(-90), math.rad(0)),

  C1 = CFrame.new(-0.5, 1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(-90), math.rad(0))

 }

 local tween2 = TweenService:Create(rig["Torso"]["Left Hip"], info, goal2)

 local goal3 = {

  C0 = CFrame.new(-1, 0.5, 0) * CFrame.fromOrientation(math.rad(0), math.rad(-90), math.rad(0)),

  C1 = CFrame.new(0.5, 0.5, 0) * CFrame.fromOrientation(math.rad(0), math.rad(-90), math.rad(0))

 }

 local tween3 = TweenService:Create(rig["Torso"]["Left Shoulder"], info, goal3)

 local goal4 = {

  C0 = CFrame.new(1, 0.5, 0) * CFrame.fromOrientation(math.rad(0), math.rad(90), math.rad(0)),

  C1 = CFrame.new(-0.5, 0.5, 0) * CFrame.fromOrientation(math.rad(0), math.rad(90), math.rad(0))

 }

 local tween4 = TweenService:Create(rig["Torso"]["Right Shoulder"], info, goal4)

 local goal5 = {

  C0 = CFrame.new(1, -1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(90), math.rad(0)),

  C1 = CFrame.new(0.5, 1, 0) * CFrame.fromOrientation(math.rad(0), math.rad(90), math.rad(0))

 }

 local tween5 = TweenService:Create(rig["Torso"]["Right Hip"], info, goal5)

 local goal6 = {

  C0 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(90), math.rad(0), math.rad(0)),

  C1 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(0), math.rad(0), math.rad(0))

 }

 local tween6 = TweenService:Create(rig["Left Leg"]["LeftTConnection"], info, goal6)

 local goal7 = {

  C0 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(0), math.rad(0), math.rad(0)),

  C1 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(0), math.rad(0), math.rad(0))

 }

 local tween7 = TweenService:Create(rig["Left Thigh"]["LeftFConnection"], info, goal7)

 local goal8 = {

  C0 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(90), math.rad(0), math.rad(0)),

  C1 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(0), math.rad(0), math.rad(0))

 }

 local tween8 = TweenService:Create(rig["Right Leg"]["RightTConnection"], info, goal8)

 local goal9 = {

  C0 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(0), math.rad(0), math.rad(0)),

  C1 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(0), math.rad(0), math.rad(0))

 }

 local tween9 = TweenService:Create(rig["Right Thigh"]["RightFConnection"], info, goal9)

 local goal10 = {

  C0 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(90), math.rad(0), math.rad(0)),

  C1 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(0), math.rad(0), math.rad(0))

 }

 local tween10 = TweenService:Create(rig["Left Arm"]["LeftWConnection"], info, goal10)

 local goal11 = {

  C0 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(0), math.rad(0), math.rad(0)),

  C1 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(0), math.rad(0), math.rad(0))

 }

 local tween11 = TweenService:Create(rig["Left Wrist"]["LeftHConnection"], info, goal11)

 local goal12 = {

  C0 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(90), math.rad(0), math.rad(0)),

  C1 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(0), math.rad(0), math.rad(0))

 }

 local tween12 = TweenService:Create(rig["Right Arm"]["RightWConnection"], info, goal12)

 local goal13 = {

  C0 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(0), math.rad(0), math.rad(0)),

  C1 = CFrame.new(0, 0, 0) * CFrame.fromOrientation(math.rad(0), math.rad(0), math.rad(0))

 }

 local tween13 = TweenService:Create(rig["Right Wrist"]["RightHConnection"], info, goal13)

 tween1:Play()

 tween2:Play()

 tween3:Play()

 tween4:Play()

 tween5:Play()

 tween6:Play()

 tween7:Play()

 tween8:Play()

 tween9:Play()

 tween10:Play()

 tween11:Play()

 tween12:Play()

 tween13:Play()

 tween1.Completed:Wait()

 for i,v in pairs(rig.Humanoid:GetPlayingAnimationTracks()) do

  v:Stop()

 end

 rig.Humanoid.WalkSpeed = 16

 switchingmodes = false

 animatescript.Disabled = false

end

--

uis.InputBegan:Connect(function(input)

 if (uis:GetFocusedTextBox()) then

  return;

 end

 if switchingmodes == true then

  return;

 end

 if input.KeyCode == Enum.KeyCode.X then

  if isextended == false then

   isextended = true

   animatescript.Disabled = true

   for i,v in pairs(rig.Humanoid:GetPlayingAnimationTracks()) do

    v:Stop()

   end

   rig.Humanoid.WalkSpeed = 0

   switchingmodes = true

   local info = TweenInfo.new(

    TransitionTime,

    Enum.EasingStyle.Cubic,

    Enum.EasingDirection.Out,

    0,

    false,

    0

   )

   local goal = {

    HipHeight = 3

   }

   local tween = TweenService:Create(rig.Humanoid, info, goal)

   tween:Play()

   StartExtend()

  else

   isextended = false

   rig.Humanoid.WalkSpeed = 0

   switchingmodes = true

   local info = TweenInfo.new(

    TransitionTime,

    Enum.EasingStyle.Cubic,

    Enum.EasingDirection.Out,

    0,

    false,

    0

   )

   local goal = {

    HipHeight = 0

   }

   local tween = TweenService:Create(rig.Humanoid, info, goal)

   tween:Play()

   ReturnCompact()

  end

 end 

 if input.KeyCode == Enum.KeyCode.Z then

  if isextended == false then

   rig.Humanoid.Sit = true

  end

 end

 if input.KeyCode == Enum.KeyCode.F then

  if isextended == true then

   local orig = rig["Humanoid"].JumpPower

   rig["Humanoid"].JumpPower = 250

   rig["Humanoid"].WalkSpeed = 100

   rig["Humanoid"].Jump = true

   local scream = Instance.new("Sound")

   scream.Parent = game.Workspace

   scream.SoundId = "rbxassetid://2648568095"

   scream.Volume = 3

   scream.Name = "KABOOM"

   scream:Play()

   game:GetService("Debris"):AddItem(scream, 10)

   wait(0.1)

   rig["Humanoid"].JumpPower = orig

   wait(2)

   rig["Humanoid"].WalkSpeed = 32

  end

 end

 if input.KeyCode == Enum.KeyCode.C then

  if isextended == false then

   rig.Humanoid.WalkSpeed = 25

   wait(2)

   rig.Humanoid.WalkSpeed = 16

  end

 end

 if input.KeyCode == Enum.KeyCode.R then

  if currentlygrabbing == true then

   return;

  end

  if isextended == true then

   currentlygrabbing = true

   local info = TweenInfo.new(

    0.3,

    Enum.EasingStyle.Cubic,

    Enum.EasingDirection.InOut,

    0,

    false,

    0

   )

   local infoslow = TweenInfo.new(

    1,

    Enum.EasingStyle.Cubic,

    Enum.EasingDirection.InOut,

    0,

    false,

    0

   )

   

   local goal1 = {

    C0 = CFrame.new(-1, 0.5, 0) * CFrame.fromOrientation(math.rad(0), math.rad(-90), math.rad(0)),

    C1 = CFrame.new(0.5, 0.5, 0) * CFrame.fromOrientation(math.rad(40), math.rad(-90), math.rad(-90))

   }

   local goal2 = {

    C0 = CFrame.new(1, 0.5, 0) * CFrame.fromOrientation(math.rad(0), math.rad(90), math.rad(0)),

    C1 = CFrame.new(-0.5, 0.5, 0) * CFrame.fromOrientation(math.rad(40), math.rad(90), math.rad(90))

   }

   local tween2 = TweenService:Create(rig["Torso"]["Right Shoulder"], info, goal2)

   local tween1 = TweenService:Create(rig["Torso"]["Left Shoulder"], info, goal1)

   tween1:Play()

   tween2:Play()

   

   local scream = Instance.new("Sound")

   scream.Parent = game.Workspace

   scream.SoundId = "rbxassetid://9126422335"

   scream.Volume = 3

   scream.Name = "RAGE"

   scream:Play()

   game:GetService("Debris"):AddItem(scream, 10)

   tween1.Completed:Wait()

   wait(2)

   

   local goal1 = {

    C0 = CFrame.new(-1, 0.5, 0) * CFrame.fromOrientation(math.rad(0), math.rad(-90), math.rad(0)),

    C1 = CFrame.new(0.5, 0.5, 0) * CFrame.fromOrientation(math.rad(40), math.rad(-90), math.rad(-20))

   }

   local goal2 = {

    C0 = CFrame.new(1, 0.5, 0) * CFrame.fromOrientation(math.rad(0), math.rad(90), math.rad(0)),

    C1 = CFrame.new(-0.5, 0.5, 0) * CFrame.fromOrientation(math.rad(40), math.rad(90), math.rad(20))

   }

   local tween2 = TweenService:Create(rig["Torso"]["Right Shoulder"], infoslow, goal2)

   local tween1 = TweenService:Create(rig["Torso"]["Left Shoulder"], infoslow, goal1)

   tween1:Play()

   tween2:Play()

   

   tween1.Completed:Wait()

   

   currentlygrabbing = false

  end

 end

end)

game:GetService("Players").LocalPlayer:GetMouse().Button1Down:Connect(function()

 if (uis:GetFocusedTextBox()) then

  return;

 end

 if switchingmodes == true then

  return;

 end

 if currentlygrabbing == true then

  return;

 end

 if isextended == true then

  currentlygrabbing = true

  local info = TweenInfo.new(

   0.3,

   Enum.EasingStyle.Cubic,

   Enum.EasingDirection.InOut,

   0,

   false,

   0

  )

  local infoslow = TweenInfo.new(

   1,

   Enum.EasingStyle.Cubic,

   Enum.EasingDirection.InOut,

   0,

   false,

   0

  )

  local goal1 = {

   C0 = CFrame.new(-1, 0.5, 0) * CFrame.fromOrientation(math.rad(0), math.rad(-90), math.rad(0)),

   C1 = CFrame.new(0.5, 0.5, 0) * CFrame.fromOrientation(math.rad(70), math.rad(-90), math.rad(-10))

  }

  local goal2 = {

   C0 = CFrame.new(1, 0.5, 0) * CFrame.fromOrientation(math.rad(0), math.rad(90), math.rad(0)),

   C1 = CFrame.new(-0.5, 0.5, 0) * CFrame.fromOrientation(math.rad(70), math.rad(90), math.rad(-10))

  }

  local tween2 = TweenService:Create(rig["Torso"]["Right Shoulder"], info, goal2)

  local tween1 = TweenService:Create(rig["Torso"]["Left Shoulder"], info, goal1)

  tween1:Play()

  tween2:Play()

  tween1.Completed:Wait()

  local goal1 = {

   C0 = CFrame.new(-1, 0.5, 0) * CFrame.fromOrientation(math.rad(0), math.rad(-155), math.rad(0)),

   C1 = CFrame.new(0.5, 0.5, 0) * CFrame.fromOrientation(math.rad(70), math.rad(-90), math.rad(-10))

  }

  local goal2 = {

   C0 = CFrame.new(1, 0.5, 0) * CFrame.fromOrientation(math.rad(0), math.rad(155), math.rad(0)),

   C1 = CFrame.new(-0.5, 0.5, 0) * CFrame.fromOrientation(math.rad(70), math.rad(90), math.rad(-10))

  }

  local tween2 = TweenService:Create(rig["Torso"]["Right Shoulder"], info, goal2)

  local tween1 = TweenService:Create(rig["Torso"]["Left Shoulder"], info, goal1)

  tween1:Play()

  tween2:Play()

  tween1.Completed:Wait()

  local goal1 = {

   C0 = CFrame.new(-1, 0.5, 0) * CFrame.fromOrientation(math.rad(0), math.rad(-90), math.rad(0)),

   C1 = CFrame.new(0.5, 0.5, 0) * CFrame.fromOrientation(math.rad(40), math.rad(-90), math.rad(-20))

  }

  local goal2 = {

   C0 = CFrame.new(1, 0.5, 0) * CFrame.fromOrientation(math.rad(0), math.rad(90), math.rad(0)),

   C1 = CFrame.new(-0.5, 0.5, 0) * CFrame.fromOrientation(math.rad(40), math.rad(90), math.rad(20))

  }

  local tween2 = TweenService:Create(rig["Torso"]["Right Shoulder"], infoslow, goal2)

  local tween1 = TweenService:Create(rig["Torso"]["Left Shoulder"], infoslow, goal1)

  tween1:Play()

  tween2:Play()

  

  tween1.Completed:Wait()

  

  currentlygrabbing = false

 end

end)
